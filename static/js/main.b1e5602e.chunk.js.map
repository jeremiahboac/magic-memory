{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","id","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","resetTurn","prevTurns","useEffect","prevCard","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA0BeA,EAvBI,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAQhD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVC,IAAI,kBACJE,QAbY,WACdJ,GACFF,EAAaD,IAYTM,IAAI,kBAPiBN,EAAKQ,KCP9BC,EAAa,CACjB,CAAE,IAAO,qBAAsBC,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,oBAAqBA,SAAS,IA+E1BC,MA5Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBkB,EAAjB,KAEMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAA3B,GAAI,kCAASA,GAAT,IAAeQ,GAAIiB,KAAKC,cAEjCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAGPf,EAAe,SAACD,GACpBiB,EAAYG,EAAapB,GAAQkB,EAAalB,IAG1C4B,EAAY,WAChBV,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAa,GAAS,OAAIA,EAAY,KAClCR,GAAY,IA6Bd,OA1BAS,qBAAU,WACRR,MACC,IAEHQ,qBAAU,WACLb,GAAaE,IACdE,GAAY,GACTJ,EAAUZ,MAAQc,EAAUd,KAC7BS,GAAS,SAAAiB,GACP,OAAOA,EAASJ,KAAI,SAAA3B,GAClB,OAAGA,EAAKK,MAAQY,EAAUZ,IACjB,2BAAIL,GAAX,IAAiBU,SAAS,IAEnBV,QAIb4B,KAEAI,YAAW,WACTJ,MACC,QAGN,CAACX,EAAWE,IAGb,sBAAKf,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASe,EAAjB,sBAEA,qBAAKlB,UAAU,YAAf,SACGS,EAAMc,KAAI,SAAA3B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKU,QAC1DP,SAAUA,GAJLH,EAAKQ,SAQf,wCAAWO,SChFlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1e5602e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SingleCard.css'\r\n\r\nconst SingleCard = ({card, handleChoice, flipped, disabled}) => {\r\n\r\n  const handleClick = () => {\r\n    if(!disabled) {\r\n      handleChoice(card)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='card' key={card.id}>\r\n      <div className={flipped ? 'flipped' : ''}>\r\n        <img className='front' src={card.src} alt=\"card-front\" />\r\n        <img \r\n          className='back' \r\n          src=\"./img/cover.png\" \r\n          onClick={handleClick} \r\n          alt=\"card-back\" \r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleCard","import { useEffect, useState } from 'react'\nimport './App.css'\n\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  { \"src\": \"./img/helmet-1.png\", matched: false },\n  { \"src\": \"./img/potion-1.png\", matched: false },\n  { \"src\": \"./img/ring-1.png\", matched: false },\n  { \"src\": \"./img/scroll-1.png\", matched: false },\n  { \"src\": \"./img/shield-1.png\", matched: false },\n  { \"src\": \"./img/sword-1.png\", matched: false },\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({...card, id: Math.random()}))\n\n      setChoiceOne(null)\n      setChoiceTwo(null)\n      setCards(shuffledCards)\n      setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n      setDisabled(true)\n      if(choiceOne.src === choiceTwo.src) {\n        setCards(prevCard => {\n          return prevCard.map(card => {\n            if(card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => {\n          resetTurn()\n        }, 500);\n      }\n    } \n  }, [choiceOne, choiceTwo])\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n            key={card.id}            \n            card={card} \n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n       <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}